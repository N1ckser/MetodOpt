public class ChordMethod {

    // Функция, минимум которой мы ищем
    public static double f(double x) {
        return -Math.log(x) / x;
    }

    // Производная функции
    public static double df(double x) {
        return (Math.log(x) - 1) / (x * x);
    }

    // Метод хорд
    public static double chordMethod(double a, double b, double epsilon) {
        int iterations = 0; // Счетчик итераций
        int functionEvaluations = 0; // Счетчик вычислений функции

        System.out.println("Начальный интервал: [" + a + ", " + b + "]");

        while (Math.abs(b - a) > epsilon) {
            // Вычисляем значения производной на концах интервала
            double df_a = df(a);
            double df_b = df(b);
            functionEvaluations += 2;

            // Вычисляем новую точку по методу хорд
            double x_new = a - df_a * (b - a) / (df_b - df_a);

            // Вычисляем значение производной в новой точке
            double df_new = df(x_new);
            functionEvaluations++;

            // Выводим текущую итерацию
            System.out.println("\nИтерация " + (iterations + 1) + ":");
            System.out.println("  Интервал: [" + a + ", " + b + "]");
            System.out.println("  Новая точка: x_new = " + x_new + ", f'(x_new) = " + df_new);

            // Определяем новый интервал
            if (df_new > 0) {
                b = x_new; // Минимум находится в левой половине
            } else if (df_new < 0) {
                a = x_new; // Минимум находится в правой половине
            } else {
                break; // Найдена точка минимума
            }

            // Увеличиваем счетчик итераций
            iterations++;
        }

        // Вычисляем точку минимума
        double minPoint = (a + b) / 2;
        double minValue = f(minPoint);
        functionEvaluations++;

        // Выводим результаты
        System.out.println("\nРезультаты:");
        System.out.println("Количество итераций: " + iterations);
        System.out.println("Количество вычислений функции: " + functionEvaluations);
        System.out.println("Точка минимума: " + minPoint);
        System.out.println("Значение функции в точке минимума: " + minValue);

        return minPoint;
    }

    public static void main(String[] args) {
        double a = 2; // Начало интервала
        double b = 25; // Конец интервала
        double epsilon = 0.05; // Точность

        double minPoint = chordMethod(a, b, epsilon);
    }
}
