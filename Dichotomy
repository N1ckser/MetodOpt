public class Dichotomy {

    // Функция, минимум которой мы ищем
    public static double f(double x) {
        return -Math.log(x) / x;
    }

    // Метод дихотомии
    public static double dichotomy(double a, double b, double epsilon, double delta) {
        double x1, x2;
        int iterations = 0; // Счетчик итераций
        int functionEvaluations = 0; // Счетчик вычислений функции

        System.out.println("Начальный интервал: [" + a + ", " + b + "]");

        while (Math.abs(b - a) > epsilon) {
            x1 = (a + b - delta) / 2;
            x2 = (a + b + delta) / 2;

            double f1 = f(x1);
            double f2 = f(x2);
            functionEvaluations += 2; // Увеличиваем счетчик вычислений функции

            if (f1 < f2) {
                b = x2;
            } else {
                a = x1;
            }

            iterations++; // Увеличиваем счетчик итераций

            // Выводим текущий интервал
            System.out.println("Итерация " + iterations + ": интервал [" + a + ", " + b + "]");
        }

        System.out.println("Количество итераций: " + iterations);
        System.out.println("Количество вычислений функции: " + functionEvaluations);
        return (a + b) / 2;
    }

    public static void main(String[] args) {
        double a = 20; // Начало интервала
        double b = 30; // Конец интервала
        double epsilon = 0.05; // Точность
        double delta = 0.01; // Константа различимости

        double minPoint = dichotomy(a, b, epsilon, delta);
        double minValue = f(minPoint);

        System.out.println("Минимум функции находится в точке: " + minPoint);
        System.out.println("Значение функции в точке минимума: " + minValue);
    }
}
