public class Mid_point {

    // Функция, минимум которой мы ищем
    public static double f(double x) {
        return -Math.log(x) / x;
    }

    // Производная функции
    public static double df(double x) {
        return (Math.log(x) - 1) / (x * x);
    }

    // Метод средней точки
    public static double midpointMethod(double a, double b, double epsilon) {
        int iterations = 0; // Счетчик итераций
        int functionEvaluations = 0; // Счетчик вычислений функции

        System.out.println("Начальный интервал: [" + a + ", " + b + "]");

        while (Math.abs(b - a) > epsilon) {
            // Вычисляем среднюю точку
            double c = (a + b) / 2;

            // Вычисляем производную в средней точке
            double df_c = df(c);
            functionEvaluations++;

            // Выводим текущую итерацию
            System.out.println("\nИтерация " + (iterations + 1) + ":");
            System.out.println("  Интервал: [" + a + ", " + b + "]");
            System.out.println("  Средняя точка: c = " + c + ", f'(c) = " + df_c);

            // Определяем направление сужения интервала
            if (df_c > 0) {
                // Минимум находится в левой половине
                b = c;
            } else if (df_c < 0) {
                // Минимум находится в правой половине
                a = c;
            } else {
                // Найдена точка минимума
                break;
            }

            // Увеличиваем счетчик итераций
            iterations++;
        }

        // Вычисляем точку минимума
        double minPoint = (a + b) / 2;
        double minValue = f(minPoint);
        functionEvaluations++;

        // Выводим результаты
        System.out.println("\nРезультаты:");
        System.out.println("Количество итераций: " + iterations);
        System.out.println("Количество вычислений функции: " + functionEvaluations);
        System.out.println("Точка минимума: " + minPoint);
        System.out.println("Значение функции в точке минимума: " + minValue);

        return minPoint;
    }

    public static void main(String[] args) {
        double a = 20; // Начало интервала
        double b = 30; // Конец интервала
        double epsilon = 0.05; // Точность

        double minPoint = midpointMethod(a, b, epsilon);
    }
}
